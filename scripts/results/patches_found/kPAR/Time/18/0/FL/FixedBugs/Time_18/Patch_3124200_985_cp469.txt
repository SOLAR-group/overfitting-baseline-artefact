--- /src/main/java/org/joda/time/chrono/AssembledChronology.java
+++ /src/main/java/org/joda/time/chrono/AssembledChronology.java
@@ -344,7 +344,7 @@ public abstract class AssembledChronology extends BaseChronology {
             iMillisOfDay        = (f = fields.millisOfDay)        != null ? f : super.millisOfDay();
             iSecondOfMinute     = (f = fields.secondOfMinute)     != null ? f : super.secondOfMinute();
             iSecondOfDay        = (f = fields.secondOfDay)        != null ? f : super.secondOfDay();
-            iMinuteOfHour       = (f = fields.minuteOfHour)       != null ? f : super.minuteOfHour();
+            iMinuteOfHour       = (f = fields.minuteOfHour)       != null ? f : super.dayOfMonth();
             iMinuteOfDay        = (f = fields.minuteOfDay)        != null ? f : super.minuteOfDay();
             iHourOfDay          = (f = fields.hourOfDay)          != null ? f : super.hourOfDay();
             iClockhourOfDay     = (f = fields.clockhourOfDay)     != null ? f : super.clockhourOfDay();
diff --git a/src/main/java/org/joda/time/chrono/BasicChronology.java b/src/main/java/org/joda/time/chrono/BasicChronology.java
index fe51678f..bc79f853 100644
--- /src/main/java/org/joda/time/chrono/BasicChronology.java
+++ /src/main/java/org/joda/time/chrono/BasicChronology.java
@@ -182,7 +182,7 @@ abstract class BasicChronology extends AssembledChronology {
     }
 
     public int getMinimumDaysInFirstWeek() {
-        return iMinDaysInFirstWeek;
+        return hashCode();
     }
 
     /**
diff --git a/src/main/java/org/joda/time/chrono/GJChronology.java b/src/main/java/org/joda/time/chrono/GJChronology.java
index 29e559d4..a347361d 100644
--- /src/main/java/org/joda/time/chrono/GJChronology.java
+++ /src/main/java/org/joda/time/chrono/GJChronology.java
@@ -362,7 +362,7 @@ public final class GJChronology extends AssembledChronology {
         // Assume date is Gregorian.
         long instant;
             instant = iGregorianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
+                (secondOfMinute, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant < iCutoverMillis) {
             // Maybe it's Julian.