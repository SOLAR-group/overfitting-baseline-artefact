--- /src/main/java/org/apache/commons/math/complex/Complex.java
+++ /src/main/java/org/apache/commons/math/complex/Complex.java
@@ -152,4 +151,0 @@
-		org.apache.commons.math.util.MathUtils.checkNotNull(rhs);
-		return createComplex(real + rhs.getReal(), 
-		imaginary + rhs.getImaginary());
-	}
@@ -171,6 +166,0 @@
-	public org.apache.commons.math.complex.Complex conjugate() {
-		if (isNaN) {
-			return org.apache.commons.math.complex.Complex.NaN;
-		}
-		return createComplex(real, -imaginary);
-	}
@@ -213,3 +203,13 @@
-	public org.apache.commons.math.complex.Complex divide(org.apache.commons.math.complex.Complex rhs) throws 
-	org.apache.commons.math.exception.NullArgumentException {
-		org.apache.commons.math.util.MathUtils.checkNotNull(rhs);
+
+
+
+
+
+
+
+
+
+
+
+
+
@@ -218 +218 @@
-		}
+		} 		org.apache.commons.math.util.MathUtils.checkNotNull(rhs); 		return createComplex(real + rhs.getReal(), imaginary + rhs.getImaginary());} 	public org.apache.commons.math.complex.Complex conjugate() { 		if (isNaN) { 			return org.apache.commons.math.complex.Complex.NaN;} 		return createComplex(real, -imaginary);} 	public org.apache.commons.math.complex.Complex divide(org.apache.commons.math.complex.Complex rhs) throws org.apache.commons.math.exception.NullArgumentException { 		org.apache.commons.math.util.MathUtils.checkNotNull(rhs); 		if (isNaN || rhs.isNaN) { 			return org.apache.commons.math.complex.Complex.NaN;}

