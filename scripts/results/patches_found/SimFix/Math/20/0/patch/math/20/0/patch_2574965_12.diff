--- /src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
+++ /src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
@@ -902,6 +902,8 @@
          * @return the normalized objective variables.
          */
         public double[] encode(final double[] x) {
+// start of generated patch
+inputSigma=x.clone();
             if (boundaries == null) {
                 return x;
             }
@@ -911,6 +913,18 @@
                 res[i] = (x[i] - boundaries[0][i]) / diff;
             }
             return res;
+// end of generated patch
+/* start of original code
+            if (boundaries == null) {
+                return x;
+            }
+            double[] res = new double[x.length];
+            for (int i = 0; i < x.length; i++) {
+                double diff = boundaries[1][i] - boundaries[0][i];
+                res[i] = (x[i] - boundaries[0][i]) / diff;
+            }
+            return res;
+ end of original code*/
         }
 
         /**
