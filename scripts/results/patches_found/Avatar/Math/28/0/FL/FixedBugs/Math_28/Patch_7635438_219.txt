--- /src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java
+++ /src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java
@@ -376,12 +376,15 @@ public enum LocalizedFormats implements Localizable {
     public String getLocalizedString(final Locale locale) {
         try {
             final String path = LocalizedFormats.class.getName().replaceAll("\\.", "/");
-            ResourceBundle bundle =
+            if (path != null) {
+	ResourceBundle bundle =
                     ResourceBundle.getBundle("assets/" + path, locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated format
                 return bundle.getString(toString());
             }
+	}
+
 
         } catch (MissingResourceException mre) {
             // do nothing here
diff --git a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java
index a84438d9b..e9f6f6748 100644
--- /src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java
+++ /src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java
@@ -140,12 +140,10 @@ public class SimplexSolver extends AbstractLinearOptimizer {
                 for (Integer row : minRatioPositions) {
                     int i = tableau.getNumObjectiveFunctions();
                     for (; i < tableau.getWidth() - 1 && minRow != row; i++) {
-                        if (row == tableau.getBasicRow(i)) {
-                            if (i < minIndex) {
+                        if (i < minIndex) {
                                 minIndex = i;
                                 minRow = row;
                             }
-                        }
                     }
                 }
                 return minRow;
